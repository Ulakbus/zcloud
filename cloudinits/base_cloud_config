#cloud-config
users:
  # TODO: coreos-ssh-import-github deprecated replace it with new remote import
  - name: ali
    coreos-ssh-import-github: alirizakeles
coreos:
  etcd:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new
    discovery: https://discovery.etcd.io/895ab47daa1758089836d2a71dcd94d2
    # use $public_ipv4 if your datacenter of choice does not support private networking
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  fleet:
    public-ip: $private_ipv4   # used for fleetctl ssh command
    metadata: project=zaerp,disk=ssd
  flannel:
    interface: $private_ipv4
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: flanneld.service
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "172.17.0.0/16" }'
      command: start

    # timezone settings. ntp use coreos default pools, just tune timezone 
    # https://coreos.com/docs/cluster-management/setup/configuring-date-and-timezone/ 
    - name: settimezone.service
      command: start
      content: |
        [Unit]
        Description=Set the timezone

        [Service]
        ExecStart=/usr/bin/timedatectl set-timezone Europe/Istanbul
        RemainAfterExit=yes
        Type=oneshot

    # not working for now, handle it manually.
    # sudo sysctl vm.overcommit_memory=1
    # https://github.com/coreos/coreos-cloudinit/issues/156
    # 
    # - name: systemd-sysctl.service
    #   command: restart
    #   content: |
    #     [Unit]
    #     Description=Update sysctl values written by cloud-config
    #     [Service]
    #     ExecStart=/usr/lib/systemd/systemd-sysctl vm.overcommit_memory=1
    #

    - name: consul.service
      command: start
      content: |
        [Unit]
        Description=Consul
        Documentation=https://github.com/zetaops/zcloud/blob/master/docs/consul-service.md
        Requires=docker.service
        Requires=flanneld.service
        Requires=etcd.service
        After=etcd.service
        After=flanneld.service
        After=docker.service

        [Service]
        TimeoutStartSec=0
        Restart=always
        KillMode=none
        EnvironmentFile=/etc/environment
        Environment=DOCKER_REPO=quay.io/democracyworks/consul-coreos
        Environment=VERSION=2015041102
        Environment=CONTAINER=consul

        ExecStartPre=-/usr/bin/docker kill ${CONTAINER}
        ExecStartPre=-/usr/bin/docker rm ${CONTAINER}


        ExecStartPre=/usr/bin/docker pull ${DOCKER_REPO}:${VERSION}
        ExecStartPre=/usr/bin/docker pull cap10morgan/conntrack
        ExecStartPre=/usr/bin/docker run --net=host --privileged --rm cap10morgan/conntrack -F

        ExecStart=/bin/bash -c 'docker run --name ${CONTAINER} --restart=always \
          --volume /var/run/docker.sock:/var/run/docker.sock --hostname %H \
          -p 8300:8300 -p 8301:8301 -p 8301:8301/udp -p 8302:8302 -p 8302:8302/udp \
          -p 8400:8400 -p 8500:8500 -p 53:8600/udp \
          ${DOCKER_REPO}:${VERSION} ${COREOS_PRIVATE_IPV4} %m'

        ExecStop=/usr/bin/docker stop ${CONTAINER}
        ExecStopPost=-/usr/bin/etcdctl rm /consul.io/bootstrap/machines/%m