#cloud-config

coreos:
  etcd:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new
    discovery: https://discovery.etcd.io/ca74cea0f1f46fdb9c60877392a28a4f
    # use $public_ipv4 if your datacenter of choice does not support private networking
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  fleet:
    public-ip: $private_ipv4   # used for fleetctl ssh command
    metadata: project=zaerp,clusterof=riak,disk=ssd
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: consul.service
      command: start
      content: |
        [Unit]
        Description=Consul
        Documentation=https://github.com/zetaops/zcloud/blob/master/docs/consul-service.md
        After=docker.service
        Requires=docker.service
        After=etcd.service
        Requires=etcd.service

        [Service]
        TimeoutStartSec=0
        Restart=always
        KillMode=none
        EnvironmentFile=/etc/environment
        Environment=DOCKER_REPO=quay.io/democracyworks/consul-coreos
        Environment=VERSION=2015041102
        Environment=CONTAINER=consul

        ExecStartPre=/usr/bin/mkdir -p /etc/systemd/resolved.conf.d

        ExecStartPre=-/usr/bin/docker kill ${CONTAINER}
        ExecStartPre=-/usr/bin/docker rm ${CONTAINER}
        ExecStartPre=/usr/bin/docker pull ${DOCKER_REPO}:${VERSION}
        ExecStartPre=/usr/bin/docker pull cap10morgan/conntrack
        ExecStartPre=/usr/bin/docker run --net=host --privileged --rm cap10morgan/conntrack -F

        ExecStart=/bin/bash -c 'docker run --name consul --restart=always \
          --volume /var/run/docker.sock:/var/run/docker.sock --hostname %H \
          -p 8300:8300 -p 8301:8301 -p 8301:8301/udp -p 8302:8302 -p 8302:8302/udp \
          -p 8400:8400 -p 8500:8500 -p 53:8600/udp \
          ${DOCKER_REPO}:${VERSION} ${COREOS_PRIVATE_IPV4} %m'

        ExecStartPost=/bin/bash -c 'sleep 1; echo -e "[Resolve]\nDNS=$(docker inspect --format \'{{ .NetworkSettings.IPAddress }}\' ${CONTAINER})" > /etc/systemd/resolved.conf.d/00-consul-dns.conf && systemctl restart systemd-resolved'

        ExecStop=/usr/bin/docker stop ${CONTAINER}
        ExecStopPost=/bin/bash -c 'rm /etc/systemd/resolved.conf.d/00-consul-dns.conf && systemctl restart systemd-resolved'
        ExecStopPost=-/usr/bin/etcdctl rm /consul.io/bootstrap/machines/%m

