# -*- python -*-
# ex: set syntax=python:

from buildbot.plugins import *

c = BuildmasterConfig = {}

####### BUILDSLAVES

import os
docker_host = os.getenv('SLAVE_HOST') + ':' + os.getenv('SLAVE_DOCKER_PORT')
bpass = os.getenv('BUILDBOTPOSTGRESPASS')
bclientid = os.getenv('BUILDBOTGITHUBCLIENTID')
bclientsecret = os.getenv('BUILDBOTGITHUBCLIENTSECRET')



c['slaves'] = [
    buildslave.DockerLatentBuildSlave(
        "ulakbus-test-slave",
        "3V6SBwag",
        docker_host=docker_host,
        image='zetaops/ulakbustestslave',
        version='1.18'),
    buildslave.DockerLatentBuildSlave(
        "ulakbus-ui-test-slave",
        "3V6SBwag",
        docker_host=docker_host,
        image='zetaops/ulakbusuitestslave',
        version='1.18'),
    buildslave.DockerLatentBuildSlave(
        "ulakbus-deploy-slave",
        "3V6SBwag",
        docker_host=docker_host,
        image='zetaops/deployslave',
        version='1.18')
]
c['protocols'] = {'pb': {'port': 9989}}

####### CHANGESOURCES

c['change_source'] = []
c['change_source'].append(changes.GitPoller(
        'git://github.com/zetaops/ulakbus.git',
        workdir='gitpoller-ulakbus', branch='master',
        pollinterval=300))

c['change_source'].append(changes.GitPoller(
        'git://github.com/zetaops/ulakbus-ui.git',
        workdir='gitpoller-ulakbus-ui', branches='ALL',
        pollinterval=300))

c['change_source'].append(changes.GitPoller(
        'git://github.com/zetaops/pyoko.git',
        workdir='gitpoller-pyoko', branch='master',
        pollinterval=300))

c['change_source'].append(changes.GitPoller(
        'git://github.com/zetaops/zengine.git',
        workdir='gitpoller-zengine', branch='master',
        pollinterval=300))

####### SCHEDULERS

c['schedulers'] = []
c['schedulers'].append(schedulers.SingleBranchScheduler(
                            name="ulakbustest",
                            change_filter=util.ChangeFilter(repository='git://github.com/zetaops/ulakbus.git', branch='master'),
                            treeStableTimer=None,
                            builderNames=["runtests"]))
c['schedulers'].append(schedulers.SingleBranchScheduler(
                            name="uitest",
                            change_filter=util.ChangeFilter(repository='git://github.com/zetaops/ulakbusui.git', branch='master'),
                            treeStableTimer=None,
                            builderNames=["runuitests"]))
c['schedulers'].append(schedulers.SingleBranchScheduler(
                            name="ulakbusdeploy",
                            change_filter=util.ChangeFilter(repository='git://github.com/zetaops/ulakbus.git', branch='master'),
                            treeStableTimer=None,
                            builderNames=["deployulakbus"]))
c['schedulers'].append(schedulers.SingleBranchScheduler(
                            name="ulakbusuideploy",
                            change_filter=util.ChangeFilter(repository='git://github.com/zetaops/ulakbusui.git', branch='master'),
                            treeStableTimer=None,
                            builderNames=["deployulakbusui"]))
c['schedulers'].append(schedulers.ForceScheduler(
                            name="force",
                            builderNames=["runtests", "runuitests", "deployulakbus", "deployulakbusui"]))

c['schedulers'].append(schedulers.Nightly(
                            name="nightly",
                            branch="master",
                            builderNames=["deployulakbus", "deployulakbusui"],
                            hour=3, minute=0))

####### BUILDERS

ulakbustestfactory = util.BuildFactory()
ulakbustestfactory.addStep(steps.Git(
    repourl='git://github.com/zetaops/ulakbus.git',
    mode='incremental'))
ulakbustestfactory.addStep(steps.ShellCommand(command=["pip", "install", "-r", "requirements.txt"]))
ulakbustestfactory.addStep(steps.ShellCommand(command=["ln", "-s", "build/ulakbus", "/usr/local/lib/python2.7/dist-packages/"]))
ulakbustestfactory.addStep(steps.ShellCommand(command=["python", "manage.py", "update_schema", "--bucket", "all"], workdir='build/ulakbus'))
ulakbustestfactory.addStep(steps.ShellCommand(command=["py.test", "tests"]))

ulakbusuitestfactory = util.BuildFactory()
ulakbusuitestfactory.addStep(steps.Git(
    repourl='git://github.com/zetaops/ulakbus-ui.git',
    mode='incremental'))
ulakbusuitestfactory.addStep(steps.ShellCommand(command=["sudo", "npm", "install"]))
ulakbusuitestfactory.addStep(steps.ShellCommand(command=["sudo", "chmod", "-R", "777", "/home/buildbot"]))
ulakbusuitestfactory.addStep(steps.ShellCommand(command=["node_modules/bower/bin/bower", "install"]))
ulakbusuitestfactory.addStep(steps.ShellCommand(command=["npm", "test"]))

ulakbusdeployfactory = util.BuildFactory()
ulakbusdeployfactory.addStep(steps.ShellCommand(command=["python", "createunit.py", "ulakbus@.service"], workdir='/buildslave'))

ulakbusuideployfactory = util.BuildFactory()
ulakbusuideployfactory.addStep(steps.ShellCommand(command=["python", "createunit.py", "ulakbusui@.service"], workdir='/buildslave'))

c['builders'] = []
c['builders'].append(
    util.BuilderConfig(name="runtests",
      slavenames=["ulakbus-test-slave"],
      factory=ulakbustestfactory))

c['builders'].append(
    util.BuilderConfig(name="runuitests",
      slavenames=["ulakbus-ui-test-slave"],
      factory=ulakbusuitestfactory))

c['builders'].append(
    util.BuilderConfig(name="deployulakbus",
      slavenames=["ulakbus-deploy-slave"],
      factory=ulakbusdeployfactory))

c['builders'].append(
    util.BuilderConfig(name="deployulakbusui",
      slavenames=["ulakbus-deploy-slave"],
      factory=ulakbusuideployfactory))

####### STATUS TARGETS

c['status'] = []

####### SERVICES

c['services'] = []

mn = reporters.MailNotifier(fromaddr="buildbot@zetaops.io",
                            lookup="ulakbus.org")
c['services'].append(mn)

####### PROJECT IDENTITY

c['title'] = "Ulakbus"
c['titleURL'] = "https://github.com/zetaops/ulakbus"
c['buildbotURL'] = "http://ulakbus.zetaops.io:8010/"

# minimalistic config to activate new web UI
from buildbot.www.authz import roles
authz = util.Authz(
  allowRules=[
    util.StopBuildEndpointMatcher(role="admins"),
    util.ForceBuildEndpointMatcher(role="admins")
  ],
  roleMatchers=[
    roles.RolesFromEmails(admins=["evren.kutar@zetaops.io"])
  ]
)
c['www'] = {
    "port": 8010,
    # "auth": util.GitHubAuth(bclientid, bclientsecret),
    "authz": authz,
    "auth": util.UserPasswordAuth({"evren.kutar@zetaops.io": "password"}),
}

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    # 'db_url' : "sqlite:///state.sqlite",
    'db_url' : "postgresql://buildbot:%s@zx-redis-03.c.zetaops-academic-erp.internal:5432/buildbot" % bpass,
}